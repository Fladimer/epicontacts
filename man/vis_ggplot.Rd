% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vis_ggplot.R
\name{vis_ggplot}
\alias{vis_ggplot}
\title{Plot epicontacts objects using ggplot}
\usage{
vis_ggplot(x, x_axis, node_color = x_axis, node_size = 5,
  edge_color = NULL, edge_width = 1, edge_linetype = NULL,
  col_pal = NULL, edge_col_pal = NULL, size_range = c(3, 10),
  legend = TRUE, thin = TRUE, ttree_shape = "branching",
  root_order = "size", node_order = "size",
  reverse_root_order = FALSE, reverse_node_order = FALSE,
  position_unlinked = "bottom", position_dodge = FALSE)
}
\arguments{
\item{x}{An \code{\link{epicontacts}} object.}

\item{x_axis}{A character string indicating which field of the linelist data
should be used to specify the x axis position (must be numeric or Date).}

\item{node_color}{An index or character string indicating which field of the
linelist should be used to color the nodes. If node color = 'R_i', the
individual reproductive number for each case (i.e. number of outgoing
infection/contacts) will be calculated and used to specify the node colour.}

\item{node_size}{An integer indicating the size of the nodes, or a
character string indicating which field of the linelist should be used
to determine the size of the node. Defaults to 3. If node color = 'R_i', the
individual reproductive number for each case (i.e. number of outgoing
infection/contacts) will be calculated and used to specify the node size.}

\item{edge_color}{An index or character string indicating which field of the
contacts data should be used to color the edges of the graph.}

\item{edge_linetype}{An integer or character string indicating which field of
the contacts data should be used to indicate the edge linetype. If the
output format is visNetwork, this field of the contacts data must contain a
binary variable, as visNetwork only supports dashed/non-dashed edges.}

\item{col_pal}{A scale_fill ggplot function specifying the color palette for
the nodes. The function must be provided (e.g. scale_fill_discrete), not
the palette itself (e.g. scale_fill_discrete()).}

\item{edge_col_pal}{A scale_color ggplot function specifying the color palette for
the edges. The function must be provided (e.g. scale_color_discrete), not
the palette itself (e.g. scale_color_discrete()).}

\item{size_range}{A numeric vector of length 2, indicating the minimum and
maximum node size.}

\item{legend}{A logical indicating whether a legend should be added to the
plot.}

\item{thin}{A logical indicating if the data should be thinned with
\code{\link{thin}} so that only cases with contacts should be plotted.}

\item{ttree_shape}{'branching' will create a branching transmission
tree. 'rectangle' will create a rectangular shaped plot similar to a
phylogeny that avoids overlapping edges. This argument is only called when
type = 'ttree'.}

\item{root_order}{A character string indicating which field of the linelist
data is used to vertically order index cases of individual transmission
chains (i.e. the 'roots' of the transmission trees). If root_order =
'size', index cases will be ordered by the size of the downstream
transmission chains they generate. This argument is only called when type =
'ttree'.}

\item{node_order}{A character string indicating which field of the linelist
data is used to vertically order nodes in the transmission tree (i.e. the
'roots' of the transmission trees). If node_order = 'size', nodes will be
ordered by the size of the downstream transmission chains they generate.
This argument is only called when type = 'ttree'.}

\item{reverse_root_order}{A logical indicating if the ordering of the roots
hsould be reversed. This argument is only called when type = 'ttree'.}

\item{reverse_node_order}{A logical indicating if the ordering of the nodes
should be reversed. This argument is only called when type = 'ttree'.}

\item{position_unlinked}{A character string indicating where unlinked cases
should be placed. Valid options are 'top', 'bottom' and 'middle', where
'middle' will place unlinked cases according to root_order. This argument
is only called when type = 'ttree'.}

\item{position_dodge}{A logical indicating if two cases can occupy the same y
coordinate or 'dodge' each other. This argument is only called when type =
'ttree'.}

\item{ttree_output}{'visnetwork' will output to visNetwork, 'ggplot' will
output to ggplot2. visnetwork is recommended for interactive uses, ggplot
for static figure generation and when axis labels and legends are
required. ggplot figures are only available for type = 'ttree'.}

\item{...}{Further arguments to be passed to \code{ggplot}.}
}
\value{
The same output as \code{ggplot2}.
}
\description{
This function plots \code{\link{epicontacts}} objects using the
\code{ggplot2} package. This output is only available for directed, acyclical
networks with one incoming edge per node (e.g. a transmission network with
only one infector per case)
}
\examples{
if (require(outbreaks)) {

## example using MERS outbreak in Korea, 2014
head(mers_korea_2015[[1]])
head(mers_korea_2015[[2]])

x <- make_epicontacts(linelist=mers_korea_2015[[1]],
                       contacts = mers_korea_2015[[2]],
                       directed=TRUE)

\dontrun{
plot(x)
plot(x, node_color = "place_infect")
# show transmission tree with time as the horizontal axis, showing all nodes
vis_epicontacts(x, x_axis = "dt_onset", thin = FALSE) 
plot(x, node_color = "loc_hosp", legend_max=20, annot=TRUE)
plot(x, node_color = "loc_hosp", legend_max=20, annot=TRUE, x_axis = "dt_onset")
plot(x, "place_infect", node_shape = "sex",
     shapes = c(M = "male", F = "female"))

plot(x, "sex", node_shape = "sex", shapes = c(F = "female", M = "male"),
     edge_label = "exposure", edge_color = "exposure")
}
}
}
\seealso{
\code{\link[visNetwork]{visNetwork}} in the package \code{visNetwork}.
  \code{\link{edges_pal}} and \code{\link{cases_pal}} for color palettes used
}
\author{
Finlay Campbell (\email{f.campbell15@imperial.ac.uk})
}
