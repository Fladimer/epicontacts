% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vis_ggplot.R
\name{vis_ggplot}
\alias{vis_ggplot}
\title{Plot epicontacts objects using ggplot}
\usage{
vis_ggplot(x, x_axis, node_color = x_axis, node_size = 5,
  edge_color = NULL, edge_width = 1, edge_linetype = NULL,
  edge_alpha = NULL, col_pal = NULL, edge_col_pal = NULL,
  size_range = c(3, 10), legend = TRUE, ttree_shape = "branching",
  root_order = "size", node_order = "size",
  reverse_root_order = FALSE, reverse_node_order = FALSE,
  null_node_color = "black", null_edge_color = "black",
  lineend = "butt", unlinked_pos = "bottom", position_dodge = FALSE,
  parent_pos = "middle", custom_parent_pos = NULL, label = FALSE,
  y_coor = NULL, igraph_type = NULL)
}
\arguments{
\item{x}{An \code{\link{epicontacts}} object.}

\item{x_axis}{A character string indicating which field of the linelist data
should be used to specify the x axis position (must be numeric or Date).}

\item{node_color}{An index or character string indicating which field of the
linelist should be used to color the nodes. If node color = 'R_i', the
individual reproductive number for each case (i.e. number of outgoing
infection/contacts) will be calculated and used to specify the node colour.}

\item{node_size}{An integer indicating the size of the nodes, or a
character string indicating which field of the linelist should be used
to determine the size of the node. Defaults to 3. If node color = 'R_i', the
individual reproductive number for each case (i.e. number of outgoing
infection/contacts) will be calculated and used to specify the node size.}

\item{edge_color}{An index or character string indicating which field of the
contacts data should be used to color the edges of the graph.}

\item{edge_width}{An integer/numeric indicating the global width of
the edges, or a character string indicating which field of the contacts data
should be mapped to the edge width.}

\item{edge_linetype}{An integer or character string indicating which field of
the contacts data should be used to indicate the edge linetype.}

\item{edge_alpha}{An integer/numeric indicating the global transparency of
the edges, or a character string indicating which field of the contacts data
should be used to indicate the edge transparency.}

\item{col_pal}{A scale_fill ggplot function specifying the color palette for
the nodes. The function must be provided (e.g. scale_fill_discrete), not
the palette itself (e.g. scale_fill_discrete()).}

\item{edge_col_pal}{A scale_color ggplot function specifying the color palette for
the edges. The function must be provided (e.g. scale_color_discrete), not
the palette itself (e.g. scale_color_discrete()).}

\item{size_range}{A numeric vector of length 2, indicating the minimum and
maximum node size.}

\item{legend}{A logical indicating whether a legend should be added to the
plot.}

\item{ttree_shape}{'branching' will create a branching transmission
tree. 'rectangle' will create a rectangular shaped plot similar to a
phylogeny that avoids overlapping edges. This argument is only called when
type = 'ttree'.}

\item{root_order}{A character string indicating which field of the linelist
data is used to vertically order index cases of individual transmission
chains (i.e. the 'roots' of the transmission trees). If root_order =
'size', index cases will be ordered by the size of the downstream
transmission chains they generate. This argument is only called when type =
'ttree'.}

\item{node_order}{A character string indicating which field of the linelist
data is used to vertically order nodes in the transmission tree (i.e. the
'roots' of the transmission trees). If node_order = 'size', nodes will be
ordered by the size of the downstream transmission chains they generate.
This argument is only called when type = 'ttree'.}

\item{reverse_root_order}{A logical indicating if the ordering of the roots
hsould be reversed. This argument is only called when type = 'ttree'.}

\item{reverse_node_order}{A logical indicating if the ordering of the nodes
should be reversed. This argument is only called when type = 'ttree'.}

\item{null_node_color}{A character indicating the global node colour if
node_color has not been specifed or has been specified as NULL.}

\item{null_edge_color}{A character indicating the global edge colour if
edge_color has not been specifed or has been specified as NULL.}

\item{lineend}{Character indicating the lineend to be used for geom_segment.}

\item{unlinked_pos}{A character string indicating where unlinked cases
should be placed. Valid options are 'top', 'bottom' and 'middle', where
'middle' will place unlinked cases according to root_order. This argument
is only called when type = 'ttree'.}

\item{position_dodge}{A logical indicating if two cases can occupy the same y
coordinate or 'dodge' each other. This argument is only called when type =
'ttree'.}

\item{parent_pos}{Specify the position of the parent node relative to its
children. Can be one of 'middle', 'top' or 'bottom'.}

\item{custom_parent_pos}{A function specifying the position of children nodes
relative to their parent. This function must accept a single integer `x` as
its only argument, specifying the number of children nodes. It must return
a vector of length x, specifying the position of each child relative to the
parent, where a x > 0 indicates above the parent, x < 0 indicates below the
parent, and x = 0 indicates the same height as the parent.}

\item{label}{A logical indicating if case IDs should be displayed on the
y-axis labels. Only works when position_dodge = TRUE, otherwise
y-coordinates are not unique.}

\item{y_coor}{Manual specification of y coordinates. Must be a vector with one
y coordinate for each case between 0 and 1.}

\item{igraph_type}{Alternate tree layouts provided by igraph. Must be one of
'rt' for Reingold-Tilford layout, 'sugiyama' for Sugiyama layout or 'fr'
for Fruchterman-Reingold layout.}

\item{...}{Further arguments to be passed to \code{ggplot}.}
}
\value{
The same output as \code{ggplot2}.
}
\description{
This function plots \code{\link{epicontacts}} objects using the
\code{ggplot2} package. This output is only available for directed, acyclical
networks with one incoming edge per node (e.g. a transmission network with
only one infector per case)
}
\examples{
if (require(outbreaks)) {

## example using MERS outbreak in Korea, 2014
head(mers_korea_2015[[1]])
head(mers_korea_2015[[2]])

x <- make_epicontacts(linelist=mers_korea_2015[[1]],
                       contacts = mers_korea_2015[[2]],
                       directed=TRUE)

\dontrun{
plot(x)
plot(x, node_color = "place_infect")
# show transmission tree with time as the horizontal axis, showing all nodes
vis_epicontacts(x, x_axis = "dt_onset", thin = FALSE) 
plot(x, node_color = "loc_hosp", legend_max=20, annot=TRUE)
plot(x, node_color = "loc_hosp", legend_max=20, annot=TRUE, x_axis = "dt_onset")
plot(x, "place_infect", node_shape = "sex",
     shapes = c(M = "male", F = "female"))

plot(x, "sex", node_shape = "sex", shapes = c(F = "female", M = "male"),
     edge_label = "exposure", edge_color = "exposure")
}
}
}
\seealso{
\code{\link[visNetwork]{visNetwork}} in the package \code{visNetwork}.
  \code{\link{edges_pal}} and \code{\link{cases_pal}} for color palettes used
}
\author{
Finlay Campbell (\email{f.campbell15@imperial.ac.uk})
}
